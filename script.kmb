#!./kamby

message := 'Hello, World!'    # Define new variable
print 'Message:' message      # Return 'Hello, World!'
message = 'Bye, bye'          # Edit variable value
print 'Edited:' message       # Return 'Bye, bye'
message := 'Hello again!'     # Append 'message' in stack
print 'Appended:' message     # Return 'Hello again!'
print 'Last removed'
del message                   # Remove last 'message' in stack
print 'Old value:' message    # Return 'Bye, bye' (previous 'message' in stack)
print "Sum:" 1 + 2 + 3        # Math expressions

user := "GOGS"
if true {
    print user
    del user
    print user 'should be deleted'
} message {
    print 'Else if'
} else {
    print 'Final else'
}

print user 'should be deleted'
print (if false 'yes' else 'no')

def say { print "Function said:" surname firstname (.) }
say [firstname := "Henrique"; surname := "Soares"]
say "Gogs"

count = 0
while {count < 3} {
    count += 1
    print 'COUNT:' count
}
print "END:" count

for {i := 3} {i < 5} {i += 1} {
    print 'I:' i
}

list = ['first' 'second' 'third']
list += 'fourth'
print 'LIST APPENDED:' list :: {. 4}
print 'LIST:' list :: {. 2}
list :: {(. 4) = '4th'}
list :: {(. 2) = '2nd'}
list += ['five' 'last one']
debug list

test := "Test"
(.) = 'Little thing'
print 'Last:' (. 1)

l2 = ['shamone' 'two' 'three']
print l2 :: {. 0}
print l2 :: {. 1}
print l2 :: {. 3}
print l2 :: {. 7}

obj = [name := 'Gogs'; age := 37; children := 3]
obj :: {
  name = 'Henrique'
  children = 4
}
print "children:" obj :: {children}
obj :: {del children}
debug obj
obj :: {
  del name
  print "Debug inside"
  debug
}
print "Debug after"
obj :: {debug}
